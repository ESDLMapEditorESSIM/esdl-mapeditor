[uwsgi]
wsgi-file =  app.py
callable = app
#module = app:app


# multi process does not work with socket.io, see
# https://stackoverflow.com/questions/48638000/getting-400-bad-request-error-frequently-when-trying-to-use-flask-socket-with-uw
processes = 1 
# threading not allowed with gevent+uwsgi
threads = 8 

# When using master process it normally forks worker processes that have no relation with the thread spawned in the master. This means that the different threads can't share any data in uWSGI master mode. 
# To make sure our app loads after the master forks (and we can share state among the treads) we need to set lazy to true.
# see https://stackoverflow.com/questions/51931262/threading-in-flask-not-working-with-uwsgi-but-working-on-commandline
master = true
lazy = true
### Websocket configuration
# gevent = 50
# uwgsi needs ssl support to get websockets working see:
# https://stackoverflow.com/questions/24183053/how-to-build-uwsgi-with-ssl-support-to-use-the-websocket-handshake-api-function
# if issue with websockets try this instead of http-websockets: http-raw-body = true
# http-websockets does not support chuncked data, http-raw-body does
#disabled for traefik http-websockets = true
#disabled for traefik websocket-max-size = 2048

http = 0.0.0.0:8111
uid = nobody
gid = nobody
#chmod-sock = 664
vacuum = true
# Buffer-size fixes issue with "invalid request block size: 4140 (max 4096)...skip"
buffer-size=32768

stats = localhost:9191
die-on-term = true

#logto = uwsgi/access.log
#check-static = static/

# fixes issues with sending streams of data to a client
# see https://beenje.github.io/blog/posts/uwsgi-send_file-and-python35/
wsgi-disable-file-wrapper = true
disable-sendfile = true
